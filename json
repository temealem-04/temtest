import pytest
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import json

@pytest.fixture
def browser():
    driver = webdriver.Chrome()
    driver.maximize_window()
    yield driver
    driver.quit()

def get_available_backup_codes():
    with open('backup_codes.json', 'r') as file:
        return json.load(file)

def mark_backup_code_as_used(used_code):
    with open('used_backup_codes.json', 'r') as file:
        used_codes = json.load(file)
    used_codes.append(used_code)
    with open('used_backup_codes.json', 'w') as file:
        json.dump(used_codes, file)

def test_login_with_backup_codes(browser):
    available_backup_codes = get_available_backup_codes()

    if not available_backup_codes:
        assert False, "No backup codes available."

    # Navigate to the login page
    browser.get("https://example.com/login")

    # Fill in the username and password
    username_input = browser.find_element_by_id("username")
    password_input = browser.find_element_by_id("password")

    username_input.send_keys("your_username")
    password_input.send_keys("your_password")
    password_input.send_keys(Keys.RETURN)

    # Now, we're on the 2FA page
    assert "Two-Factor Authentication" in browser.title

    # Try each available code until a successful login or no more codes
    for code in available_backup_codes:
        # Locate the input field for the backup code and enter the code
        backup_code_input = browser.find_element_by_id("backup_code")
        backup_code_input.clear()  # Clear any previous input
        backup_code_input.send_keys(code)
        backup_code_input.send_keys(Keys.RETURN)

        if "Dashboard" in browser.title:
            # Login was successful
            mark_backup_code_as_used(code)
            break

    # Verify that we have successfully logged in
    assert "Dashboard" in browser.title
